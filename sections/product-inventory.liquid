{{ 'product-inventory.css' | asset_url | stylesheet_tag }}

<div class="product-inventory-wrapper">
  <product-inventory
    class="product-inventory"
    data-inventory-total="{{ section.settings.total_inventory }}"
    data-activity-quota="{{ section.settings.activity_quota }}"
  >
    {% for variant in product.variants %}
      <span class="inventory-quantity" data-quantity="{{ variant.inventory_quantity }}"></span>
    {% endfor %}
    <span class="inventory"></span>
  </product-inventory>
</div>
<script>
  class ProductInventory extends HTMLElement {
    constructor() {
      super();
      this.totalInventory = parseInt(this.dataset['inventory-total']);
      this.activityQuota = parseInt(this.dataset['activity-quota']);
      console.log(this.totalInventory, this.activityQuota);
    }
    connectedCallback() {
      const inventory = this.querySelector('.inventory');
      this.inventory = setInterval(() => {
        const count = this.activityQuota - (this.totalInventory - this.getCurrentInventory());
        if (count) clearInterval(this.inventory);
        inventory.innerText = `${count}`;
      }, 5000);
    }
    disconnectedCallback() {
      clearInterval(this.inventory);
    }
    getCurrentInventory() {
      const quantityElements = Array.from(this.querySelectorAll('.inventory-quantity'));
      return (
        quantityElements &&
        quantityElements.reduce((totalQuantity, element) => totalQuantity + parseInt(element.dataset.quantity), 0)
      );
    }
  }
  customElements.define('product-inventory', ProductInventory);
</script>
{% schema %}
{
  "name": "product inventory",
  "settings": [
    {
      "type": "text",
      "id": "total_inventory",
      "label": "total inventory"
    },
    {
      "type": "text",
      "id": "activity_quota",
      "label": "activity quota"
    }
  ],
  "presets": [
    {
      "name": "product inventory"
    }
  ]
}
{% endschema %}
