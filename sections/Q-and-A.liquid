{{ 'q-and-a.css' | asset_url | stylesheet_tag }}

<div class="faq_qa_main">
  <div class="page-width">
    <div class="faq_qa_heading">
      {% if section.settings.h2 != blank %}
        <h1>
          {{ section.settings.h2 }}
          <small>{{ section.settings.sub_txt }}</small>
        </h1>
      {% endif %}
      <div class="search">
        <input type="text">
        <button>search</button>
      </div>
    </div>
    <div class="faq-wrapper">
      <aside class="page-sidebar">
        <div class="sidebar-wrapper">
          {% for aside in section.blocks %}
            {% if aside.type == 'title' %}
              <div class="aside-item">{{ aside.settings.h2 }}</div>
            {% endif %}
          {% endfor %}
        </div>
        <div class="m-sidebar-wrapper">
          <select>
            {% for aside in section.blocks %}
              {% if aside.type == 'title' %}
                <option value="{{ aside.settings.h2 }}">{{ aside.settings.h2 }}</option>
              {% endif %}
            {% endfor %}
          </select>
        </div>
      </aside>
      <div class="faq_qna_iner">
        <div class="quetion_item">
          {% for block in section.blocks %}
            <div class="option">
              {% if block.type == 'title' %}
                <h2 class="title">{{ block.settings.h2 }}</h2>
              {% endif %}
              {% if block.type == 'block' %}
                <div class="qn_group_main">
                  <div class="ques_title">
                    {% if block.settings.h3 != blank %}
                      <h3>{{ block.settings.h3 }}</h3>
                      <span class="onc_arrow">
                        <svg
                          width="24"
                          height="24"
                          viewBox="0 0 24 24"
                          fill="none"
                          stroke="currentColor"
                          stroke-width="2"
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          class="feather feather-chevron-up"
                        >
                          <polyline points="18 15 12 9 6 15"></polyline>
                        </svg>
                      </span>
                    {% endif %}
                  </div>
                  <div class="answer_txt">
                    {% if block.settings.text %}
                      {{ block.settings.text }}
                    {% endif %}
                  </div>
                  <div class="video">
                    {% if block.settings.video %}
                      {{ block.settings.video }}
                    {% endif %}
                  </div>
                </div>
              {% endif %}
            </div>
            <hr class="qna_hr">
          {% endfor %}
        </div>
      </div>
    </div>
    <div class="search-result"></div>
  </div>
</div>
<script>
  $(function () {
    const visibleHeight = document.documentElement.clientHeight / 2;
    const title = document.querySelector('.faq_qna_iner').querySelectorAll('.title');
    const select = document.querySelector('select');
    let value = '';
    $('.search input').on('input', function () {
      value = $(this).val();
    });

    const descTitle = document.querySelectorAll('.ques_title');
    const descText = document.querySelectorAll('.answer_txt');
    const content = [];
    for (let i = 0; i < descTitle.length; i++) {
      content.push({ title: descTitle[i].innerText.trim(), text: descText[i].innerText.trim() });
    }
    let searchResult = [];
    let timer = null;
    $('.search button').click(function () {
      if (timer !== null) {
        clearTimeout(timer);
      }
      timer = setTimeout(() => {
        seek();
      }, 500);
    });

    function seek() {
      searchResult = [];
      let left = 0,
        right = content.length - 1;
      const regex = new RegExp(value, 'gi');
      while (left < right) {
        console.log(value);
        if (content[left].title.match(regex)) {
          searchResult.push(content[left]);
        }
        if (content[right].title.match(regex)) {
          searchResult.push(content[right]);
        }
        left++;
        right--;
      }
      if (left === right && content[left].title.match(regex)) {
        searchResult.push(content[left]);
      }
      createElementSearchResult();
    }

    function createElementSearchResult() {
      if (!value) {
        $('.search-result').hide();
        $('.faq-wrapper').show();
        return;
      }
      const search_result = document.querySelector('.search-result');
      $('.faq-wrapper').hide();
      $('.search-result').empty();
      if (!searchResult.length) {
        const q = document.createElement('p');
        q.innerHTML = 'No search for now';
        search_result.appendChild(q);
        return;
      }
      for (let i = 0; i < searchResult.length; i++) {
        const faqItem = document.createElement('div');
        const q = document.createElement('p');
        q.innerHTML = searchResult[i].title.replace(new RegExp(value, 'gi'), (match) => `<mark>${match}</mark>`);
        const a = document.createElement('p');
        a.innerHTML = searchResult[i].text;
        faqItem.appendChild(q);
        faqItem.appendChild(a);
        search_result.appendChild(faqItem);
      }
    }

    $('.aside-item').click(function () {
      let index = $(this).index();
      $('.aside-item').removeClass('active');
      $(this).addClass('active');
      title[index].scrollIntoView({ behavior: 'smooth', block: 'center' });
    });
    const scroll = () => {
      const scrollTop = document.body.scrollTop || document.documentElement.scrollTop;
      for (let index = 0; index < title.length; index++) {
        if (scrollTop > title[index].offsetTop - visibleHeight) {
          $('.aside-item').removeClass('active');
          $('.aside-item').eq(index).addClass('active');
          select.value = $('.aside-item').eq(index).text();
        }
      }
    };
    window.addEventListener('scroll', scroll);
    $('select').change(function () {
      let selectedIndex = $(this).prop('selectedIndex');
      title[selectedIndex].scrollIntoView({ behavior: 'smooth', block: 'center' });
    });
  });
</script>
{% schema %}
{
  "name": "Q And A",
  "settings": [
    {
      "type": "text",
      "id": "h1",
      "label": "Heading"
    },
    {
      "type": "text",
      "id": "sub_txt",
      "label": "Sub Heading"
    }
  ],
  "blocks": [
    {
      "type": "title",
      "name": "title",
      "settings": [
        {
          "type": "text",
          "id": "h2",
          "label": "Heading"
        }
      ]
    },
    {
      "type": "block",
      "name": "Q&A",
      "settings": [
        {
          "type": "text",
          "id": "h3",
          "label": "Question"
        },
        {
          "type": "richtext",
          "id": "text",
          "label": "Answer"
        },
        {
          "type": "video",
          "id": "video",
          "label": "video"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Q And A"
    }
  ]
}
{% endschema %}

{% stylesheet %}
{% endstylesheet %}

{% javascript %}
{% endjavascript %}
